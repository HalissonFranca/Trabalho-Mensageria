# Configuração do Kafka
# Especifica os servidores Kafka aos quais a aplicação deve se conectar.
spring.kafka.bootstrap-servers=localhost:9092

# Define o ID do grupo de consumidores, permitindo que múltiplos consumidores compartilhem a carga.
spring.kafka.consumer.group-id=grupo-notificacoes

# Define o que acontece quando não há um offset inicial ou se o offset atual é inválido.
# 'earliest' faz com que o consumidor comece a ler mensagens a partir do início do tópico.
spring.kafka.consumer.auto-offset-reset=earliest

# Deserializadores para o consumidor (Consumer)
# Usamos ErrorHandlingDeserializer para lidar com erros de deserialização.
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegados para os deserializadores de chave e valor
# Define o deserializador real que será utilizado para deserializar as chaves e os valores das mensagens como strings.
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.apache.kafka.common.serialization.StringDeserializer

# Outras propriedades relacionadas (opcional)
# Quando setado como false, o consumidor não irá automaticamente confirmar o offset das mensagens.
# Permite um controle mais manual sobre quando as mensagens são consideradas processadas.
spring.kafka.consumer.enable-auto-commit=false

# Se setado como false, a aplicação continuará funcionando mesmo se alguns tópicos não estiverem disponíveis.
spring.kafka.listener.missing-topics-fatal=false
